Вот примерный план работы по данному тестовому заданию:
1. Создать проект на github
2. Инициализировать структуру проекта
  Makefile
  include/chat/types.hpp
  client/
    main.cpp
    Makefile
  server/
    main.cpp
    Makefile
  tests.txt

3. Сервер (пример здесь: https://www.geeksforgeeks.org/socket-programming-cc/)
3.1. Написать комплект ручных тестов сервера и разместить в файле tests.txt:
  1) Подключение клиента
  2) Ожидание переподключения клиента при обрыве соединения
  3) Вывод корректных данных
  4) Вывод сообщения об ошибке для некорректных данных
3.2. Порт сервера получить из константы из общего заголовочного файла проекта (include/common.hpp)
3.3. Создать слушающий TCP-сокет на адресе 127.0.0.1:<port>
3.4. Приём соединения
3.5. Отслеживание закрытия соединения и ожидание переподключения
3.6. Вычитывание данных из соединения и вывод на stdout
3.7. Валидация данных и вывод сообщения об ошибке

4. Клиент (пример здесь https://www.geeksforgeeks.org/socket-programming-cc/)
4.1. Написать комплект ручных тестов:
  1) Подключение к запущенному северу
  2) Отключение при остановке сервера
  3) Переподключение при перезапуске сервера
  4) Запуск без сервера и ожидание старта сервера
  5) Автоподключение при запуске сервера
  6) Ввод данных с stdin при остановленном сервере (данные должны вводиться и отбрасываться)
4.2. Порт сервера получить из константы из общего заголовочного файла проекта (include/common.hpp)
4.3. Ввод строк из stdin в нити 1 в разделяемый буфер
4.4. Валидация и KB-преобразование введенной строки
4.5. Запустить нить 2 и передать в неё буфер и condition_variable
4.6. Пробовать установить в нити 2 соединение к серверу
4.7. После установления соединения ожидать данных от нити 1 через condition_variable
4.8. Обработка потери соединения с сервером (ожидать сервер и переподключаться)
   Сложность: Как, будучи заблокированным в condition_variable, обнаружить обрыв соединения?
4.9. Получение данных от нити 1
4.10. Вычисление суммы численных элементов  полученных от нити 1 данных
4.11. Отправка результата через соединение серверу















1 восстановить учётку на venux
2 выбрать форматирование кода и следовать ему
3 вытащить примеры наружу
4 разобраться как делать замену vscode
5 настроить editorconfig для проекта

замечания:
    server
        #9 макрос заменить на константу (static const int PORT)
        #22 ошибку проверять на == -1
        #43
        #54 1)проверка на ошибки read 
            2)потенциальный sigsegv

признак делимости на 32 - послендие 5 цифр делятся на 32

план работ по клиенту

1) ввод данных со stdin
2) алгоритм обработки данных
3) запуск и взаимодействие нитей
4) TCP соединение и отправка данных по нему
5) реализовать механизм переподключения



план работ 8.08.23
1) поправить ошибку в memmove
2) добавить в Маке генерацию zip
3) каркас клиента 
      




        